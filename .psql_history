SHOW search_path;
SET search_path TO tattoo, public;
SHOW search_path;
CREATE TABLE artists(     artist_id INT PRIMARY KEY,     name VARCHAR(20) NOT NULL,     biography VARCHAR(100),     city VARCHAR(20),     state VARCHAR(2),     registration_date DATE NOT NULL);
CREATE TABLE artists(     artist_id INT PRIMARY KEY,     name VARCHAR(20) NOT NULL,     biography VARCHAR(100),     city VARCHAR(20),     state VARCHAR(2),     registration_date DATE NOT NULL);
CREATE TABLE designs(     design_id INT PRIMARY KEY,     artist_id INT NOT NULL    creation_date DATE NOT NULL,     cost NUMERIC(12, 2) NOT NULL,     available BOOLEAN NOT NULL,    description VARCHAR(50)    FOREIGN KEY (artist_id) references artists, );
CREATE TABLE designs(     design_id INT PRIMARY KEY,     artist_id INT NOT NULL,    creation_date DATE NOT NULL,     cost NUMERIC(12, 2) NOT NULL,     available BOOLEAN NOT NULL,    description VARCHAR(50)    FOREIGN KEY (artist_id) references artists, );
CREATE TABLE designs(     design_id INT PRIMARY KEY,     artist_id INT NOT NULL,    creation_date DATE NOT NULL,     cost NUMERIC(12, 2) NOT NULL,     available BOOLEAN NOT NULL,    description VARCHAR(50)    FOREIGN KEY (artist_id) REFERENCES artists(artist_id) );
CREATE TABLE designs(     design_id INT PRIMARY KEY,     artist_id INT NOT NULL,    creation_date DATE NOT NULL,     cost NUMERIC(12, 2) NOT NULL,     available BOOLEAN NOT NULL,    description VARCHAR(50)    FOREIGN KEY(artist_id) REFERENCES artists(artist_id) );
CREATE TABLE designs(     design_id INT PRIMARY KEY,     artist_id INT NOT NULL,    creation_date DATE NOT NULL,     cost NUMERIC(12, 2) NOT NULL,     available BOOLEAN NOT NULL,    description VARCHAR(50),    FOREIGN KEY(artist_id) REFERENCES artists(artist_id) );
CREATE TABLE studio(     studio_id INT PRIMARY KEY,     address VARCHAR(50) NOT NULL,    city VARCHAR(20) NOT NULL,     state VARCHAR(20) NOT NULL,    zip_code INT NOT NULL );
CREATE TABLE customers(     customer_id INT PRIMARY KEY,     name VARCHAR(50) NOT NULL,     biography VARCHAR(100),     city VARCHAR(20),     state VARCHAR(2),    registration_date DATE NOT NULL,    gender TEXT CHECK (gender IN ('man', 'woman', 'nonbinary')));
CREATE TABLE payments(     payment_id INT PRIMARY KEY,     payment_date DATE NOT NULL,    method VARCHAR(20) NOT NULL,      amount NUMERIC(12, 2) NOT NULL, );
CREATE TABLE payments(     payment_id INT PRIMARY KEY,     payment_date DATE NOT NULL,    method VARCHAR(20) NOT NULL,      amount NUMERIC(12, 2) NOT NULL );
sdCREATE TABLE payments(     payment_id INT PRIMARY KEY,     payment_date DATE NOT NULL,    method VARCHAR(20) NOT NULL,      amount NUMERIC(12, 2) NOT NULL );
CREATE TABLE appointments(     appointment_id INT PRIMARY KEY,     start_time TIMESTAMP NOT NULL,     end_time TIMESTAMP,     projected_cost NUMERIC(12, 2),      artist_id INT NOT NULL,     design_id INT NOT NULL,     customer_id INT NOT NULL,    payment_id INT,    studio_id INT NOT NULL,      FOREIGN KEY(artist_id) REFERENCES artists(artist_id),     FOREIGN KEY(design_id) REFERENCES designs(design_id),    FOREIGN KEY(customer_id) REFERENCES customers(customer_id),    FOREIGN KEY(payment_id) REFERENCES payments(payment_id),    FOREIGN KEY(studio_id) REFERENCES studios(studio_id)      );
CREATE TABLE appointments(     appointment_id INT PRIMARY KEY,     start_time TIMESTAMP NOT NULL,     end_time TIMESTAMP,     projected_cost NUMERIC(12, 2),      artist_id INT NOT NULL,     design_id INT NOT NULL,     customer_id INT NOT NULL,    payment_id INT,    studio_id INT NOT NULL,      FOREIGN KEY(artist_id) REFERENCES artists(artist_id),     FOREIGN KEY(design_id) REFERENCES designs(design_id),    FOREIGN KEY(customer_id) REFERENCES customers(customer_id),    FOREIGN KEY(payment_id) REFERENCES payments(payment_id),    FOREIGN KEY(studio_id) REFERENCES studio(studio_id)      );
CREATE TABLE tattoo(      artist_id INT NOT NULL,     design_id INT NOT NULL,     appoINTment_id INT NOT NULL,     PRIMARY KEY(artist_id, design_id, appointment_id)    FOREIGN KEY(artist_id) REFERENCES artists(artist_id),     FOREIGN KEY(design_id) REFERENCES designs(design_id),     FOREIGN KEY(appointment_id) REFERENCES appointments(appointment_id));
CREATE TABLE tattoo(      artist_id INT NOT NULL,     design_id INT NOT NULL,     appoINTment_id INT NOT NULL,     PRIMARY KEY(artist_id, design_id, appointment_id),    FOREIGN KEY(artist_id) REFERENCES artists(artist_id),     FOREIGN KEY(design_id) REFERENCES designs(design_id),     FOREIGN KEY(appointment_id) REFERENCES appointments(appointment_id));
CREATE TABLE bill(     payment_id INT NOT NULL,     appointment_id INT NOT NULL,     FOREIGN KEY (payment_id) REFERENCES payments,     FOREIGN KEY (appoINTment_id) REFERENCES appointments,     PRIMARY KEY(payment_id, appointment_id) );
DROP TABLE billCREATE TABLE bill(     payment_id INT NOT NULL,     appointment_id INT NOT NULL,     FOREIGN KEY(payment_id) REFERENCES payments(payment_id),     FOREIGN KEY(appointment_id) REFERENCES appointments(appointment_id),     PRIMARY KEY(payment_id, appointment_id) );
CREATE TABLE bill(     payment_id INT NOT NULL,     appointment_id INT NOT NULL,     FOREIGN KEY(payment_id) REFERENCES payments(payment_id),     FOREIGN KEY(appointment_id) REFERENCES appointments(appointment_id),     PRIMARY KEY(payment_id, appointment_id) );
DROP TABLE bill;
CREATE TABLE bill(     payment_id INT NOT NULL,     appointment_id INT NOT NULL,     FOREIGN KEY(payment_id) REFERENCES payments(payment_id),     FOREIGN KEY(appointment_id) REFERENCES appointments(appointment_id),     PRIMARY KEY(payment_id, appointment_id) );
INSERT INTO artists VALUES(1,'John Smith','Handpoke artist in New York.','New York','NY','2021-11-24'),(2,'Nina Ashland','Bay area tattoo artist.','San Francisco','CA','2022-03-04'),(3,'Dylan Thomas','Machine tats in Brooklyn.','New York','NY','2022-02-06'),(4,'Jacob Dylan','Tattoo artist with 10 years of experience.','Chicago','IL','2022-01-16'),(5,'Sara Sheffield','When I''m not tattooing\, I''m probably at the beach. ','Los Angeles','CA','2022-05-22'),(6,'Eric Wallingford','Love tattooing and the Pacific Northwest.','Seattle','WA','2022-05-21'),(7,'Gina Aleppo','Experienced artist that specializes in handpoking. ','San Francisco','CA','2022-04-20'),(8,'Michelle Chen','Tattoo artist specializing in traditional Chinese tattoos','Los Angeles','CA','2022-01-30'),(9,'Ralph Nader','Tattoo apprentice in Seattle.','Seattle','CA','2022-02-21'),(10,'Sophia Gutierrez ','I''ve been tattooing for 7 years (handpokes/machine).','Los Angeles','CA','2021-12-16');
TABLE artists;
INSERT INTO designs VALUES(1,1,'2021-12-30',200,1,'Skeleton with a flower'),(2,1,'2022-01-20',220,1,'Coiled cobra'),(3,3,'2022-03-25',150,1,'Tiger''s head'),(4,4,'2022-03-23',275,0,'Horsheshoe with initials'),(5,6,'2022-05-23',230,1,'Mandala'),(6,5,'2022-05-28',340,0,'Crocodile with khmer characters'),(7,10,'2022-02-23',400,1,'Dragon wrap around'),(8,8,'2022-02-24',150,1,'Anchor'),(9,10,'2022-04-03',125,1,'Infinity Sign'),(10,6,'2022-05-26',300,0,'Vase with bird flying out');
INSERT INTO designs VALUES(1,1,'2021-12-30',200,true,'Skeleton with a flower'),(2,1,'2022-01-20',220,true,'Coiled cobra'),(3,3,'2022-03-25',150,true,'Tiger''s head'),(4,4,'2022-03-23',275,false,'Horsheshoe with initials'),(5,6,'2022-05-23',230,true,'Mandala'),(6,5,'2022-05-28',340,false,'Crocodile with khmer characters'),(7,10,'2022-02-23',400,true,'Dragon wrap around'),(8,8,'2022-02-24',150,true,'Anchor'),(9,10,'2022-04-03',125,true,'Infinity Sign'),(10,6,'2022-05-26',300,false,'Vase with bird flying out');
INSERT INTO studio VALUES(1,'59 Shinn Street','New York','NY',10004),(2,'555 Elm Drive','New York ','NY',10013),(3,'17 Scenicview Drive','Seattle','WA',98161),(4,'2224 Elliot Avenue','Seattle','WA',98101),(5,'3838 Diane Street','Los Angeles','CA',90017),(6,'741 Zimmerman Lane','Los Angeles','CA',90017),(7,'3290 Oakmound Drive','Chicago','IL ',60603),(8,'2240 Star Route','Chicago','IL ',60606),(9,'4786 Jim Rosa Lane','San Francisco','CA',94108),(10,'961 Delaware Avenue','San Francisco','CA',94115);
INSERT INTO customers VALUES(1,'Jason Miller','','San Francisco','CA','2022-01-04','male'),(2,'Ryan Monahan','','New York ','NY','2022-02-03','male'),(3,'Willem Dafoe','','Los Angeles','CA','2022-01-01','male'),(4,'Jessica Hillcrest','','Seattle','WA','2022-01-13','female'),(5,'Sara Tanner','','Chicago','IL','2022-02-17','female'),(6,'David Chang','','New York ','NY','2022-01-05','male'),(7,'Leonard Weisman','','Las Vegas','NV','2022-01-05','male'),(8,'Erica Bari','','San Diego','CA','2022-03-01','female'),(9,'Simone Yonder','','Los Angeles','CA','2022-02-04','nonbinary'),(10,'Riley Reyes','','Chicago','IL','2022-01-31','nonbinary');
INSERT INTO customers VALUES(1,'Jason Miller','','San Francisco','CA','2022-01-04','man'),(2,'Ryan Monahan','','New York ','NY','2022-02-03','man'),(3,'Willem Dafoe','','Los Angeles','CA','2022-01-01','man'),(4,'Jessica Hillcrest','','Seattle','WA','2022-01-13','woman'),(5,'Sara Tanner','','Chicago','IL','2022-02-17','woman'),(6,'David Chang','','New York ','NY','2022-01-05','man'),(7,'Leonard Weisman','','Las Vegas','NV','2022-01-05','man'),(8,'Erica Bari','','San Diego','CA','2022-03-01','woman'),(9,'Simone Yonder','','Los Angeles','CA','2022-02-04','nonbinary'),(10,'Riley Reyes','','Chicago','IL','2022-01-31','nonbinary');
INSERT INTO appointments VALUES(1,'2022-05-30 12:00','2022-05-30 14:00',200,1,1,1,1,2),(2,'2022-05-30 16:00','2022-05-30 19:00',220,1,2,4,2,1),(3,'2022-06-01 13:00','2022-06-01 15:30',150,3,3,2,3,2),(4,'2022-06-04 14:00','2022-06-04 17:00',275,4,4,10,4,8),(5,'2022-06-04 15:00','2022-06-07 17:00',230,6,5,9,5,3),(6,'2022-06-09 11:00','2022-06-09 15:00',340,5,6,10,6,6),(7,'2022-06-10 9:00','2022-06-10 13:00',400,10,7,3,7,6),(8,'2022-06-11 12:00','2022-06-11 13:30',150,8,8,6,8,6),(9,'2022-06-11 15:00','2022-06-11 16:30',125,10,9,6,9,5),(10,'2022-06-12 12:00','2022-06-12 15:00',300,6,10,7,10,3);
INSERT INTO payments VALUES(1,'2022-05-30','cash',200),(2,'2022-05-30','credit',220),(3,'2022-06-01','credit',150),(4,'2022-06-04','credit',275),(5,'2022-06-05','credit',230),(6,'2022-06-09','credit',340),(7,'2022-06-10','cash',400),(8,'2022-06-11','check',150),(9,'2022-06-11','cash',125),(10,'2022-06-12','credit',300);
INSERT INTO appointments VALUES(1,'2022-05-30 12:00','2022-05-30 14:00',200,1,1,1,1,2),(2,'2022-05-30 16:00','2022-05-30 19:00',220,1,2,4,2,1),(3,'2022-06-01 13:00','2022-06-01 15:30',150,3,3,2,3,2),(4,'2022-06-04 14:00','2022-06-04 17:00',275,4,4,10,4,8),(5,'2022-06-04 15:00','2022-06-07 17:00',230,6,5,9,5,3),(6,'2022-06-09 11:00','2022-06-09 15:00',340,5,6,10,6,6),(7,'2022-06-10 9:00','2022-06-10 13:00',400,10,7,3,7,6),(8,'2022-06-11 12:00','2022-06-11 13:30',150,8,8,6,8,6),(9,'2022-06-11 15:00','2022-06-11 16:30',125,10,9,6,9,5),(10,'2022-06-12 12:00','2022-06-12 15:00',300,6,10,7,10,3);
INSERT INTO tattoo VALUES(1,1,1),(1,2,2),(3,3,3),(4,4,4),(6,5,5),(5,6,6),(10,7,7),(8,8,8),(10,9,9),(6,10,10);
INSERT INTO bill VALUES(1,1),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(8,8),(9,9),(10,10);
pg_dump dlg2178 > dlg217;
pg_dumpall > dlg2178;
pg_dumpall > dlg2178;
SELECT cast(count(designs.cost) as decimal)/count(distinct designs.design_id) FROM designsWHERE designs.available = true;
SELECT cast(count(designs.cost) as decimal)/count(distinct designs.design_id) FROM designs;
SELECT cast(sum(designs.cost) as decimal)/count(distinct designs.design_id) FROM designsWHERE designs.available = true;
SELECT round(cast(sum(designs.cost) as decimal)/count(distinct designs.design_id),2) FROM designsWHERE designs.available = true;
SELECT designs.design_id, designs.description, artists.name, designs.costFROM designs, artistsWHERE designs.artist_id = artists.artist_id AND artist.city = 'Los Angeles';
SELECT designs.design_id, designs.description, artists.name, designs.costFROM designs, artistsWHERE designs.artist_id = artists.artist_id AND artists.city = 'Los Angeles';
SELECT designs.design_id, designs.description, artists.name, designs.costFROM designs, artistsWHERE designs.artist_id = artists.artist_id AND artists.city = 'Los Angeles' AND designs.available = true;
SELECT designs.design_id, designs.description, artists.name, designs.costFROM designs, artistsLEFT JOIN designs ON designs.artist_id = artists.artist_idWHERE artists.city = 'Los Angeles' AND designs.available = true;
SELECT designs.design_id, designs.description, artists.name, designs.costFROM designs, artistsLEFT JOIN designs ON designs.artist_id = artists.artist_idWHERE city = 'Los Angeles' AND available = true;
SELECT design_id, description, name, costFROM designs, artistsLEFT JOIN designs ON designs.artist_id = artists.artist_idWHERE city = 'Los Angeles' AND available = true;
SELECT studio.city, COUNT(distinct appointments.appointment_id), SUM(payments.cost)FROM appointments LEFT JOIN studio ON appointments.studio_id = studio.studio_idLEFT JOIN payments  ON appointments.payment_id = payments.payment_idGROUP BY city ;
SELECT studio.city, COUNT(distinct appointments.appointment_id), SUM(payments.amount)FROM appointments LEFT JOIN studio ON appointments.studio_id = studio.studio_idLEFT JOIN payments  ON appointments.payment_id = payments.payment_idGROUP BY city;
SELECT COUNT(distinct studio.city)FROM studio;
SELECT studio.city, COUNT(distinct studio.city)FROM studioGROUP BY city;
UPDATE studioSET city = 'New York'WHERE city = 'New York ';
SELECT studio.city, COUNT(distinct studio.city)FROM studioGROUP BY city;
SELECT studio.city, COUNT(distinct appointments.appointment_id), SUM(payments.amount)FROM appointments LEFT JOIN studio ON appointments.studio_id = studio.studio_idLEFT JOIN payments  ON appointments.payment_id = payments.payment_idGROUP BY city;
SELECT studio.city AS 'City', COUNT(distinct appointments.appointment_id) AS 'Number of Appointments', SUM(payments.amount) AS 'Revenue($)'FROM appointments LEFT JOIN studio ON appointments.studio_id = studio.studio_idLEFT JOIN payments  ON appointments.payment_id = payments.payment_idGROUP BY city;
SELECT studio.city AS City, COUNT(distinct appointments.appointment_id) AS Number of Appointments, SUM(payments.amount) AS Revenue($)FROM appointments LEFT JOIN studio ON appointments.studio_id = studio.studio_idLEFT JOIN payments  ON appointments.payment_id = payments.payment_idGROUP BY city;
SELECT studio.city AS City, COUNT(distinct appointments.appointment_id) AS Appointments, SUM(payments.amount) AS RevenueFROM appointments LEFT JOIN studio ON appointments.studio_id = studio.studio_idLEFT JOIN payments  ON appointments.payment_id = payments.payment_idGROUP BY city;
ALTER TABLE designsADD CONSTRAINT unsigned_est_costCHECK (cost >= 0);
ALTER TABLE appointmentsADD CONSTRAINT unsigned_costCHECK (projected_cost >= 0);
ALTER TABLE paymentsADD CONSTRAINT unsigned_paymentCHECK (amount >= 0);
ALTER TABLE paymentsADD CONSTRAINT valid_paymentCHECK (method IN ('cash', 'credit', 'check'));
SELECT round(cast(sum(designs.cost) as decimal)/count(distinct designs.design_id),2) FROM designsWHERE designs.available = true;
SELECT round(cast(sum(designs.cost) as decimal)/count(distinct designs.design_id),2) AS Average_CostFROM designsWHERE designs.available = true;
SELECT designs.design_id, designs.description, artists.name, designs.costFROM designs, artistsWHERE designs.artist_id = artists.artist_id AND artists.city = 'Los Angeles' AND designs.available = true;
SELECT studio.city AS City, COUNT(distinct appointments.appointment_id) AS Appointments, SUM(payments.amount) AS RevenueFROM appointments LEFT JOIN studio ON appointments.studio_id = studio.studio_idLEFT JOIN payments  ON appointments.payment_id = payments.payment_idGROUP BY city;
